<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "com.jeonju.mypet.product">

<!-- 소현 -->

	<!-- 상품목록 -->
	<select id="getProductList1" resultType="productVo" parameterType="hashMap">
	select a.*,b.*,c.*,IFNULL(avg(review_stars),0) AS avg_reviews_stars, COUNT(review_stars) AS cnt_reviews
	from product a join p_category b on a.p_category_idx = b.p_category_idx join product_img c on a.p_idx=c.p_idx LEFT join review d on a.p_idx=d.p_idx
	where a.p_category_idx=#{p_category_idx} and c.img_delyn='N'
	GROUP by a.p_idx;
	</select>
	
	<select id="getProductList2" resultType="productVo">
	select a.*,b.*,c.*,IFNULL(avg(review_stars),0) AS avg_reviews_stars, COUNT(review_stars) AS cnt_reviews
	from product a join p_category b on a.p_category_idx = b.p_category_idx join product_img c on a.p_idx=c.p_idx LEFT join review d on a.p_idx=d.p_idx
	where b.p_category_large=#{p_category_large} and c.img_delyn='N'
	GROUP by a.p_idx;
	</select>
	
	<!-- 상품이미지리스트 -->
	<select id="getproductImgs" resultType="Product_ImgVo">
	select a.*
	from product_img a join product b on a.p_idx=b.p_idx
	where b.p_idx=#{p_idx} and a.img_delyn='N';
	</select>
	
	
	<!-- 상품목록(페이징) -->
    <select id="getListPaging" resultType="productVo">
        select * from (
                select p_name,p_price
                from product order by p_idx DESC) A
        limit #{skip},#{amount}
    </select>
 
	<!-- 상품게시물 총개수 -->
    <select id="getTotal" resultType="int">
        select count(*) from product
    </select>
    
    
	<!-- 카테고리 -->
	<select id="getCodeName" resultType="productVo" parameterType="HashMap">
	  SELECT *,
      CASE
      WHEN p_category_idx = '1' THEN '개껌'
      WHEN p_category_idx = '2' THEN '스낵'
      WHEN p_category_idx = '3' THEN '뼈/육포'
      WHEN p_category_idx = '4' THEN '스틱'
      WHEN p_category_idx = '5' THEN '프리미엄'
      WHEN p_category_idx = '6' THEN '통살'
      WHEN p_category_idx = '7' THEN '츄르'
      WHEN p_category_idx = '8' THEN '스낵'
      WHEN p_category_idx = '9' THEN '캣잎'
      WHEN p_category_idx = '10' THEN '통살'
      WHEN p_category_idx = '11' THEN '프리미엄'
      WHEN p_category_idx = '12' THEN '스틱'
      ELSE '잉'
      END AS categoryName,
      CASE
      WHEN p_category_large = '1' THEN '강아지'
      WHEN p_category_large = '2' THEN '고양이'
      ELSE '잉'
      END AS categoryLargeName
      FROM p_category
      WHERE p_category_idx=#{p_category_idx} and p_category_large=#{p_category_large};
	</select>
	
	
	<!-- 상품상세페이지 -->
	<select id="getProductView" resultType="productVo">	
	select a.*, b.*, (select a.m_nick from members a join sellerstory b on a.midx=b.midx where b.seller_idx=(select seller_idx from product where p_idx=#{p_idx})) as m_nick,MIN(p_front_img), c.p_sys_filename, c.p_idx,IFNULL(avg(review_stars),0) AS avg_reviews_stars, COUNT(review_stars) AS cnt_reviews
	from product a join p_category b on a.p_category_idx = b.p_category_idx join product_img c on a.p_idx=c.p_idx LEFT join review d on a.p_idx=d.p_idx
	where a.p_delyn = 'N' AND a.p_idx=#{p_idx} AND c.img_delyn='N';
	</select>
	
	
 	<!-- 상품최신순목록 -->
	<select id="productNewList" resultType="productVo">
		SELECT a.*,b.*,IFNULL(avg(review_stars),0) AS avg_reviews_stars, COUNT(review_stars) AS cnt_reviews
		FROM product a join product_img b on a.p_idx=b.p_idx LEFT join review d on a.p_idx=d.p_idx
		where b.img_delyn='N'
		group by a.p_idx
		ORDER BY a.p_idx DESC;
	</select>

	<!-- 상품인기순목록 -->
	<select id="productBestList" resultType="productVo">
		SELECT a.*,b.*, COUNT(c.orders_idx) as '판매량',IFNULL(avg(review_stars),0) AS avg_reviews_stars, COUNT(review_stars) AS cnt_reviews
		FROM product a join product_img b on a.p_idx=b.p_idx LEFT join detail c on a.p_idx=c.p_idx LEFT join review d on a.p_idx=d.p_idx
		where b.img_delyn='N'
		GROUP BY a.p_idx
		ORDER BY COUNT(c.orders_idx) DESC
	</select>
	

	<!-- 리뷰작성화면 -->
	<select id="getReviewp" resultType="productVo">
	select a.p_name, a.p_idx, MIN(p_front_img), c.p_sys_filename
	from product a join product_img c on a.p_idx=c.p_idx join sellerStory b on a.seller_idx=b.seller_idx
	where a.p_idx=#{p_idx} and c.img_delyn='N'
	</select>
	
	<!-- 상세페이지 리뷰리스트 -->
	<select id="getReviewList" resultType="reviewVo">
	select a.*, b.p_name,IFNULL(avg(review_stars),0) AS avg_reviews_stars, COUNT(review_stars) AS cnt_reviews,d.*
	from review a join product b on a.p_idx=b.p_idx join orders c on a.orders_idx=c.orders_idx LEFT join pet d on a.midx=d.midx
	where b.p_idx=#{p_idx}
	GROUP BY a.review_idx;
	</select>
	
	
	<select id="imgCheckbox" resultType="reviewVo">
	select a.*, b.p_name,IFNULL(avg(review_stars),0) AS avg_reviews_stars, COUNT(review_stars) AS cnt_reviews,d.*
	from review a join product b on a.p_idx=b.p_idx join orders c on a.orders_idx=c.orders_idx LEFT join pet d on a.midx=d.midx
	where b.p_idx=#{p_idx} and not a.review_img is null
	GROUP BY a.review_idx;
	</select>
	
	<!-- 후기콘텐츠 -->
	<select id="reviewContent" resultType="reviewVo">	
	select a.p_idx,a.p_name, b.*, MIN(p_front_img), c.p_sys_filename,IFNULL(avg(review_stars),0) AS avg_reviews_stars, COUNT(review_stars) AS cnt_reviews
	from product a left join product_img c on a.p_idx=c.p_idx join review b on a.p_idx=b.p_idx
	where b.review_idx=#{review_idx} and c.img_delyn='N'
	</select>
	
	<!-- 후기insert -->
	<select id="reviewInsert" resultType="reviewVo">
	insert into review (midx, detail_idx,p_idx,orders_idx,review_content,review_stars,review_img,review_nick,review_ori_img)
	values(#{midx},#{detail_idx},#{p_idx},#{orders_idx},#{review_content},#{review_stars},#{review_img},#{review_nick},#{review_ori_img});
	</select>
	
	<update id="update">
	update sellerstory set seller_starsavg = (
	select *  from ( (select avg(review_stars)
	from review a join product b on a.p_idx=b.p_idx join sellerstory c on b.seller_idx=c.seller_idx
	where c.seller_idx=(select seller_idx from product where p_idx=#{p_idx}) )) as a) where seller_idx=(select seller_idx from product where p_idx=#{p_idx});
	</update>
	
	<!-- 후기작성 상품구매했는지 -->
	<select id="reviewWriteck" resultType="int">
	SELECT COUNT(*) as count
	from members a LEFT join orders b on a.midx=b.midx join detail c on b.orders_idx=c.orders_idx join product d on c.p_idx=d.p_idx
	where a.midx=#{midx}
	and d.p_idx=#{p_idx}
	and b.orders_status=0<!-- 4가 배송완료 -->
	</select>
	
	<!-- order_idx/detail_idx 가져오기 -->
	<select id="odIdx" resultType="detailVo">
	SELECT p_idx,x.*,y.*
	from orders x join detail y on x.orders_idx=y.orders_idx join members z on x.midx=z.midx 
	where x.midx=#{midx} 
	and y.p_idx=#{p_idx}
	</select>
	
	<!-- 상세페이지 셀러의 상품개수 -->
	<select id="getspCount" resultType="int">
    SELECT DISTINCT COUNT(p_idx) FROM product WHERE p_delyn = 'N' AND seller_idx =#{seller_idx}
    </select>
	
	<!-- 상세페이지 셀러 다른 상품 -->
	<select id="getspList" resultType="productVo">
    SELECT a.*, b.*,IFNULL(avg(review_stars),0) AS avg_reviews_stars, COUNT(review_stars) AS cnt_reviews
    FROM product a JOIN product_img b ON a.p_idx = b.p_idx LEFT join review c on a.p_idx=c.p_idx
    WHERE a.seller_idx=#{seller_idx} and b.img_delyn='N'
	GROUP BY a.p_idx
	ORDER BY a.p_idx DESC;
    </select>
    
    <!-- 상세페이지 비슷한상품 -->
    <select id="getcpList" resultType="productVo">
    select a.*,b.*,IFNULL(avg(review_stars),0) AS avg_reviews_stars, COUNT(review_stars) AS cnt_reviews
	from product a join product_img b on a.p_idx=b.p_idx JOIN product_img c on a.p_idx=c.p_idx LEFT JOIN review d on a.p_idx=d.p_idx
	WHERE a.p_category_idx=#{p_category_idx} and b.img_delyn='N'
	GROUP BY a.p_idx
	ORDER BY a.p_idx DESC;
    </select>
	
	<!-- 문의 리스트 -->
	<select id="getcmList" resultType="commentVo">
	select b.*,a.p_idx,c.m_nick
	from product a join comment b on a.p_idx=b.p_idx join members c on b.midx=c.midx
	where a.p_idx = #{p_idx}
	ORDER BY b.commentID ASC, b.subCommentID ASC
	</select>
	
	
<!-- 소현 -->

</mapper>