<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "com.jeonju.mypet.home">

<select id="getHList" resultType="productVo">
SELECT product.p_idx AS p_idx, seller_idx, p_category_idx, p_name, p_content,
 p_price, p_discount,p_disprice, product_img.p_sys_filename,p_status, p_wday,p_modifyday,
 IFNULL(avg(review_stars),0) AS avg_reviews_stars, COUNT(review_stars) AS cnt_reviews
  FROM product LEFT JOIN product_img ON product.p_idx = product_img.p_idx 
  LEFT JOIN review ON product.p_idx = review.p_idx
  GROUP BY product.p_idx
  ORDER BY p_idx DESC;
</select>

<select id="getHList2" resultType="productVo">
SELECT product.p_idx AS p_idx, seller_idx, p_category_idx, p_name, p_content,
 p_price, p_discount,p_disprice, product_img.p_sys_filename,p_status, p_wday,p_modifyday,
 IFNULL(avg(review_stars),0) AS avg_reviews_stars, COUNT(review_stars) AS cnt_reviews
  FROM product LEFT JOIN product_img ON product.p_idx = product_img.p_idx 
  LEFT JOIN review ON product.p_idx = review.p_idx LEFT JOIN detail ON product.p_idx = detail.p_idx
  GROUP BY product.p_idx
  ORDER BY p_discount DESC;
</select>

<select id="getHList3" resultType="productVo">
 SELECT product.p_idx AS p_idx, seller_idx, p_category_idx, p_name, p_content,
 p_price, p_discount,p_disprice, product_img.p_sys_filename,p_status, p_wday,p_modifyday,
 IFNULL(avg(review_stars),0) AS avg_reviews_stars, COUNT(review_stars) AS cnt_reviews
  FROM product LEFT JOIN product_img ON product.p_idx = product_img.p_idx
  LEFT JOIN review ON product.p_idx = review.p_idx LEFT JOIN detail ON product.p_idx = detail.p_idx
  GROUP BY product.p_idx
  ORDER BY avg_reviews_stars DESC;
</select>

<select id="getHList4" resultType="productVo">
  SELECT product.p_idx AS p_idx, seller_idx, p_category_idx, p_name, p_content,
 p_price, p_discount,p_disprice, product_img.p_sys_filename,p_status, p_wday,p_modifyday,
 IFNULL(avg(review_stars),0) AS avg_reviews_stars, COUNT(review_stars) AS cnt_reviews
  FROM product LEFT JOIN product_img ON product.p_idx = product_img.p_idx
  LEFT JOIN review ON product.p_idx = review.p_idx LEFT JOIN detail ON product.p_idx = detail.p_idx
  GROUP BY product.p_idx
  ORDER BY cnt_reviews DESC;
</select>

<select id="getHList5" resultType="productVo">
   SELECT product.p_idx AS p_idx, seller_idx, p_category_idx, p_name, p_content,
 p_price, p_discount,p_disprice, product_img.p_sys_filename,p_status, p_wday,p_modifyday,
 IFNULL(avg(review_stars),0) AS avg_reviews_stars, COUNT(review_stars) AS cnt_reviews,
 count(detail.detail_idx) as ccnntt
  FROM product LEFT JOIN product_img ON product.p_idx = product_img.p_idx
  LEFT JOIN review ON product.p_idx = review.p_idx LEFT JOIN detail ON product.p_idx = detail.p_idx
  GROUP BY product.p_idx
   ORDER BY ccnntt DESC;
</select>





<select id="getSearchList" resultType="productVo">
SELECT a.p_idx as p_idx, seller_idx, p_category_idx, p_name, p_content, 
p_price, p_discount, p_ori_filename
FROM product a LEFT OUTER JOIN product_img b 
ON a.p_idx = b.p_idx 
WHERE p_content LIKE CONCAT('%',#{keyword},'%') OR p_name LIKE CONCAT('%',#{keyword},'%')
</select>

<select id="resultCount" resultType="int">
SELECT DISTINCT COUNT(a.p_idx) FROM 
product a LEFT OUTER JOIN product_img b 
ON a.p_idx = b.p_idx 
WHERE p_delyn = 'N' AND p_content LIKE CONCAT('%',#{keyword},'%') OR p_name LIKE CONCAT('%',#{keyword},'%')
</select>

<select id="getReviewList" resultType="reviewVo">
SELECT product.p_idx as p_idx,product_img.p_ori_filename as p_ori_filename, 
product.p_name as p_name, review_stars, review_content
FROM product INNER JOIN product_img ON product.p_idx = product_img.p_idx
INNER JOIN review ON product.p_idx = review.p_idx ORDER BY review_idx DESC;
</select>

<insert id="getFollow" parameterType="followVo">
INSERT INTO follow(seller_idx, midx)
VALUES(#{seller_idx}, #{midx})
</insert>

<update id="plusFollowCNT" parameterType="followVo">
UPDATE sellerstory SET  seller_followcnt = seller_followcnt +1 WHERE seller_idx = #{seller_idx}
</update>

<update id="getUnfollow" parameterType="followVo">
UPDATE follow SET delyn = 'Y' WHERE delyn = 'N' AND seller_idx = #{seller_idx} AND midx = #{midx}
</update>

<update id="minusFollowCNT" parameterType="followVo">
UPDATE sellerstory SET seller_followcnt = seller_followcnt-1 WHERE seller_idx = #{seller_idx}
</update>

<select id="getCCCart" resultType="cartVo">
SELECT count(cart_idx) as cart_cnt, p.p_idx as p_idx, p_name, p_price, p_sys_filename,
c.midx as midx  from members m inner join cart c on m.midx = c.midx
inner join product p on c.p_idx = p.p_idx inner join product_img i on p.p_idx = i.p_idx
WHERE c.midx = #{midx}
group by p_idx
</select>




</mapper>