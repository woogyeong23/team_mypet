<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace = "com.jeonju.mypet.members">

	<insert id="joinMember" parameterType="membersVo">
		insert into members(m_id,m_pwd,m_name,m_nick,m_birth,m_addr1,m_addr2,m_addr3,m_phone) 
		values(#{m_id},#{m_pwd},#{m_name},#{m_nick},#{m_birth},#{m_addr1},#{m_addr2},#{m_addr3},#{m_phone})	
	</insert>
	
	<!-- 로그인 -->
	<select id="loginMember" parameterType="map" resultType="map">
		select count(*) as m_auth,m_grade,midx from members where m_id=#{m_id} and m_pwd=#{m_pwd}
	</select>
	<select id="loginMember1" parameterType="map" resultType="map">
		select count(*) as m_auth,m_nick from members where m_id=#{m_id} and m_pwd=#{m_pwd}
	</select>
	
	<!-- 아이디찾기 -->	
	<select id="getidfind" parameterType="string" resultType="string">
		select m_id from members where m_name= #{m_name}
	</select>
	<select id="getpwdfind" parameterType="map" resultType="string">
		select m_pwd from members where m_id= #{m_id} and m_phone = #{m_phone}
	</select>
	<!-- 아이디유효성 -->
	<select id="checkId" parameterType="int" resultType="int">
		select count(*) from members where m_id= #{m_id}
	</select>
	<!-- 닉네임유효성 -->
	<select id="getchecknick" parameterType="string" resultType="int">
		select count(*) from members where m_nick= #{m_nick}
	</select>
	<!-- 내정보 -->	
	<select id="getmembermodi" parameterType="int" resultType="membersVo">
		select * from members where midx= #{midx}
	</select>
	<!-- 내 정보 -->
	<select id="getmemberinfo" parameterType="int" resultType="membersVo">
		select * from members where midx= #{midx}
	</select>
	<!-- ㅇㅂㅁ -->
	<insert id="addProfile" parameterType="membersVo">
		insert into members(m_profile) values(#{m_profile})
	</insert>
	<!-- 회원정보수정 -->
	<update id="getmembermodiProcess" parameterType="membersVo">
	update members set m_name=#{m_name}, m_nick=#{m_nick},m_birth=#{m_birth},m_addr1=#{m_addr1},m_addr2=#{m_addr2},m_addr3=#{m_addr3},m_account=#{m_account}
	 where midx=#{midx}
	</update>
	
 	<!-- 펫 정보 --> 
<!-- 	<select id="getpetmodi" parameterType="int" resultType="petVo"> -->
<!-- 	select * from members a left outer join pet b ON a.midx = b.midx where a.midx=#{midx}; -->
<!-- 	</select> -->
	<!-- 펫 정보 입력 -->
	<insert id="getpetmodiProcess" parameterType="petVo">
		insert into pet(pet_name,pet_gender,pet_age,pet_type,pet_breed,midx) 
		values(#{pet_name},#{pet_gender},#{pet_age},#{pet_type},#{pet_breed},#{midx})	
	</insert>
	<!-- 펫 정보 리스트 -->
	<select id="getpetList" parameterType="int" resultType="petVo">
	select * from members a left outer join pet b ON a.midx = b.midx where a.midx=#{midx}
	</select>
	<!-- 펫삭제 -->
	<delete id="getpetdel" parameterType="list">
	delete from pet where pet_idx in
		<foreach collection="list" item="pet_idx" open="(" separator="," close=")" >
		#{pet_idx}
		</foreach>
	</delete>
	<!-- 펫정보수정 -->
	<update id="getpetup" parameterType="petVo">
	update pet set pet_name=#{pet_name}, pet_gender=#{pet_gender},pet_birth=#{pet_birth},
	pet_age=#{pet_age},pet_type=#{pet_type},pet_breed=#{pet_breed}
	 where pet_idx=#{pet_idx}
	</update>
	<select id="getordersList" parameterType="list" resultType="ordersVo">
 select  o.orders_idx, o.midx, o.orders_name , o.orders_addr1, o.orders_addr2, o.orders_addr3, o.orders_phone, o.orders_totalprice , o.orders_completeday ,
     d.detail_completeday , d.p_idx, d.detail_cnt,
     g.p_name , c.p_sys_filename , g.p_price
 from orders o left outer join detail d on d.orders_idx = o.orders_idx 
 left outer join product g on  d.p_idx= g.p_idx 
 left outer join product_img c on d.p_idx = c.p_idx
 where o.midx=#{midx}
 </select>
</mapper>